/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        pa: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(T) &kp E &kp N &kp N &kp I &kp S &kp SPACE &kp LS(S) &kp A &kp L &kp A &kp D &kp SPACE &kp LS(F) &kp L &kp U &kp T &kp E &kp SPACE &kp LS(B) &kp A &kp S &kp S &kp N8 &kp N7 &kp POUND &kp RET>;
            label = "NEW_MACRO";
            wait-ms = <20>;
        };

        ctr_a_del: ctr_a_del {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LC(LA(DELETE)) &kp ENTER>;
            label = "CTR_A_DEL";
            tap-ms = <60>;
        };

        hole: hole {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(H) &kp LS(O) &kp LS(L) &kp LS(E)>;
            label = "HOLE";
        };

        vd: vd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(V) &kp LS(D)>;
            label = "VD";
        };

        ad: ad {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(A) &kp LS(D)>;
            label = "AD";
        };

        smth: smth {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(S) &kp LS(M) &kp LS(T) &kp LS(H)>;
            label = "SMTH";
        };

        rp: rp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(R) &kp LS(P)>;
            label = "RP";
        };

        hd: hd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(H) &kp LS(D)>;
            label = "HD";
        };

        c1: c1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp AT &kp LS(C) &kp N1>;
            label = "C1";
        };

        c2: c2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp AT &kp LS(C) &kp N2>;
            label = "C2";
        };

        navis: navis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&none &kp KP_NUMBER_2>,
                <&macro_wait_time 700>,
                <&kp KP_ASTERISK &kp RET>,
                <&macro_wait_time 850>,
                <&kp Y>;

            label = "NAVIS";
        };

        refresh: refresh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&none &kp LC(F2)>,
                <&macro_wait_time 20000>,
                <&kp F5 &kp LC(F2)>;

            label = "REFRESH";
        };

        create_sleeve: create_sleeve {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp KP_NUMBER_9 &kp KP_NUMBER_6 &kp TAB &kp SPACE &kp TAB &kp TAB &kp SPACE &kp ESCAPE>;
            label = "CREATE_SLEEVE";
            wait-ms = <20>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Hide {
            bindings = <&kp LC(H)>;
            key-positions = <14 15>;
            layers = <0>;
        };

        ctrlR {
            bindings = <&kp LC(R)>;
            key-positions = <12 13>;
            layers = <0>;
        };

        screenshot {
            bindings = <&kp LG(LS(S))>;
            key-positions = <1 37>;
            layers = <0 3>;
        };

        Layer3 {
            bindings = <&tog 3>;
            key-positions = <25 26 27 28>;
            layers = <0 3>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <19 20 21>;
            layers = <3>;
        };

        z {
            bindings = <&kp LC(Z)>;
            key-positions = <1 0>;
            layers = <0 2 3>;
        };

        y {
            bindings = <&kp LC(Y)>;
            key-positions = <3 2>;
            layers = <0 2 3>;
        };

        c {
            bindings = <&kp LC(C)>;
            key-positions = <24 25>;
            layers = <0 2 3>;
        };

        v {
            bindings = <&kp LC(V)>;
            key-positions = <26 27>;
            layers = <0 3 2>;
        };

        cadenter {
            bindings = <&ctr_a_del>;
            key-positions = <18 7>;
            layers = <0>;
        };

        pa {
            bindings = <&pa>;
            key-positions = <19 8>;
            layers = <0>;
        };

        hideR {
            bindings = <&kp LC(H)>;
            key-positions = <20 21>;
            layers = <0>;
        };

        ctrlRR {
            bindings = <&kp LC(R)>;
            key-positions = <22 23>;
            layers = <0>;
        };

        screenR {
            bindings = <&kp LG(LS(S))>;
            key-positions = <11 49>;
            layers = <0 3>;
        };

        layer3R {
            bindings = <&tog 3>;
            key-positions = <31 32 33 34>;
            layers = <0 3>;
        };

        undoR {
            bindings = <&kp LC(Z)>;
            key-positions = <8 9>;
            layers = <0 2 3>;
        };

        redoR {
            bindings = <&kp LC(Y)>;
            key-positions = <10 11>;
            layers = <0 2 3>;
        };

        copyR {
            bindings = <&kp LC(C)>;
            key-positions = <32 33>;
            layers = <0 2 3>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <34 35>;
            layers = <0 3 2>;
        };

        navis {
            bindings = <&navis>;
            key-positions = <0 3>;
            layers = <0>;
        };

        refresh {
            bindings = <&refresh>;
            key-positions = <12 15>;
            layers = <0>;
        };

        cadright {
            bindings = <&ctr_a_del>;
            key-positions = <17 4>;
            layers = <0>;
        };

        paleft {
            bindings = <&pa>;
            key-positions = <3 16>;
            layers = <0>;
        };

        de {
            bindings = <&kp DEL>;
            key-positions = <5 42>;
        };

        de1 {
            bindings = <&kp DEL>;
            key-positions = <6 43>;
        };

        sleeve {
            bindings = <&create_sleeve>;
            key-positions = <24 27>;
            layers = <0>;
        };

        nnn {
            bindings = <&kp N>;
            key-positions = <13 16>;
        };

        greenshot {
            bindings = <&kp LA(F12)>;
            key-positions = <0 36>;
        };

        plain_paste {
            bindings = <&kp LC(LG(LA(V)))>;
            key-positions = <14 27>;
        };

        rgbOFF {
            bindings = <&rgb_ug RGB_OFF>;
            key-positions = <57 47>;
        };

        ctrlP {
            bindings = <&kp LC(P)>;
            key-positions = <1 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp ESC           &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp BACKSPACE  &kp DELETE                                   &kp BACKSPACE      &kp KP_MINUS  &kp F14          &kp F15          &kp F16          &kp F17
&kp TAB           &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS   &kp KP_PLUS                                  &kp A              &kp KP_PLUS   &kp KP_NUMBER_6  &kp KP_NUMBER_5  &kp KP_NUMBER_4  &kp TAB
&kp LEFT_SHIFT    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER   &kp SINGLE_QUOTE                             &kp B              &kp KP_ENTER  &kp KP_NUMBER_3  &kp KP_NUMBER_2  &kp KP_NUMBER_1  &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp KP_SLASH     &kp N9           &kp N0           &kp Y          &kp N              &kp F2         &tog 3     &kp Z              &kp COMMA     &kp Y            &kp KP_MULTIPLY  &kp KP_SLASH     &kp RIGHT_CONTROL
                                                    &kp SPACE        &lt 5 KP_DOT   &lt 2 KP_NUMBER_0  &lt 1 SPACE    &mkp RCLK  &lt 2 KP_NUMBER_0  &kp KP_DOT    &kp SPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Lower";
            bindings = <
&rp               &kp SLASH          &kp LS(UP_ARROW)    &hole          &vd        &ad                         &none      &none      &kp F14             &kp F15            &kp F16        &kp F17
&hd               &kp LS(LEFT)       &kp LS(DOWN_ARROW)  &kp LS(RIGHT)  &smth      &none                       &none      &none      &kp LS(LEFT_ARROW)  &kp LS(DOWN)       &kp LS(RIGHT)  &none
&kp LEFT_SHIFT    &c1                &c2                 &mkp LCLK      &none      &none                       &mkp RCLK  &none      &none               &none              &none          &kp LSHIFT
&kp LEFT_CONTROL  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP     &mkp MCLK      &mkp RCLK  &none  &none     &trans     &none      &mkp MCLK  &kp C_VOLUME_UP     &kp C_VOLUME_DOWN  &mkp LCLK      &kp LEFT_CONTROL
                                                         &none          &none      &none  &trans    &mkp RCLK  &none      &none      &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Raise";
            bindings = <
&none         &none         &kp UP_ARROW    &none         &none         &none                         &none  &none  &none  &none  &none  &none
&none         &kp LEFT      &kp DOWN_ARROW  &kp RIGHT     &none         &kp LC(Z)                     &none  &none  &none  &none  &none  &none
&none         &none         &none           &none         &none         &kp LC(C)                     &none  &none  &none  &none  &none  &none
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR  &none     &trans  &none  &none  &none  &none  &none  &none
                                            &none         &none         &trans      &trans    &none   &none  &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_3 {
            display-name = "QWERTY";
            bindings = <
&kp ESC           &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                                    &kp N6         &kp N7      &kp N8          &kp N9   &kp N0    &kp DEL
&kp TAB           &kp Q   &kp W   &kp E     &kp R     &kp T                                     &kp Y          &kp U       &kp I           &kp O    &kp P     &kp MINUS
&kp LEFT_SHIFT    &kp A   &kp S   &kp D     &kp F     &kp G                                     &kp H          &kp J       &kp K           &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z   &kp X   &kp C     &kp V     &kp B           &kp LBKT       &trans     &kp N          &kp M       &kp COMMA       &kp DOT  &kp FSLH  &kp RSHFT
                                  &kp LALT  &kp LGUI  &kp LEFT_SHIFT  &lt 4 SPACE    &kp SPACE  &kp BACKSPACE  &caps_word  &rgb_ug RGB_ON
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans    &trans        &trans     &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans    &kp UP_ARROW  &trans     &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans    &trans        &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                          &trans        &trans     &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&kp LS(A)  &kp LS(B)  &kp LS(C)  &kp LS(D)  &kp LS(E)  &kp LS(F)                       &trans  &trans  &trans  &trans  &trans  &trans
&kp LS(G)  &kp LS(H)  &kp LS(I)  &kp LS(J)  &kp LS(K)  &kp LS(L)                       &trans  &trans  &trans  &trans  &trans  &trans
&kp LS(M)  &kp LS(N)  &kp LS(O)  &kp LS(P)  &kp LS(Q)  &kp LS(R)                       &trans  &trans  &trans  &trans  &trans  &trans
&kp LS(S)  &kp LS(T)  &kp LS(U)  &kp LS(V)  &kp LS(W)  &kp LS(X)  &kp LS(Y)    &kp D   &trans  &trans  &trans  &trans  &trans  &trans
                                 &trans     &trans     &trans     &kp LS(Z)    &trans  &trans  &trans  &trans
            >;
        };
    };
};
